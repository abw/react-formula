:where(#{$formula-selector}) {
  /* Input Variables */
  // Width of border
  --input-border-width:           #{$border-width};
  // Border radius of field
  --input-border-radius:          #{$border-radius};
  // Vertical padding
  --input-padding-vertical:       #{$unit-padding-vertical};
  // Horizontal padding
  --input-padding-horizontal:     #{$unit-padding-horizontal};
  // Combined padding
  --input-padding:                var(--input-padding-vertical) var(--input-padding-horizontal);
  // Combined padding for prefix/suffix
  --prefix-padding:               var(--input-padding);
  // Max height of input
  --input-max-height:             calc(1em + (var(--input-padding-vertical) * 2) + (var(--input-border-width) * 2));
  // Tweak select to make same size
  --select-padding-tweak:         1.25px;
  // Width of focus ring
  --focus-ring-width:             #{$ring-width};
  // Gap between border and focus ring
  --focus-ring-gap:               #{$ring-gap};

  --input-border-radius:          #{$input-border-radius};
  --shadow-1:                     1px 1px 2px rgba(0, 0, 0, 0.1);
  --shadow-2:                     2px 2px 4px rgba(0, 0, 0, 0.08);

  /* Base Hues */
  // A hue for your brand used to style various components, including
  // checkboxes, radio buttons, etc.
  --brand-hue:                    #{$brand-hue};
  // Hue for default state inputs, typically the `$brand-hue` but almost
  // totally de-saturated.
  --input-hue:                    var(--brand-hue);
  // Hue for labels in the default state
  --label-hue:                    var(--input-hue);
  // Hue for the "required" label that can appear in the label when the
  // `showRequired` option is set
  --required-hue:                 30;
  // Hue for the "optional" tag that can appear in the label when the
  // `showOptional` option is set
  --optional-hue:                 210;
  // Hue for focussed inputs, defaulting to a sky blue.
  --focus-hue:                    var(--brand-hue);
    // Hue for validated inputs, usually a green hue.
  --valid-hue:                    90;
  // Hue for invalid inputs, usually a red hue.
  --invalid-hue:                  0;
  // Hue for disabled inputs, usually a desaturated red.
  --disabled-hue:                 0;
  // Hue for errors.
  --error-hue:                    var(--invalid-hue);
  // Hue for debugging panel, not usually seen by customers.
  --debug-hue:                    #{$debug-hue};

  /* Labels, Including Required and Optional Tags */
  // Color for field labels in the default state.
  --label-fg:                     hsl(var(--label-hue), 10%, 50%);
  // Color for the "required" tag that can appear in the label when the
  // `showRequired` option is set
  --required-fg:                  hsl(var(--required-hue), 90%, 30%);
  // Background color for the "required" tag.
  --required-bg:                  hsl(var(--required-hue), 50%, 90%);
  // Border color for the "required" tag.
  --required-bd:                  hsl(var(--required-hue), 70%, 80%);
  // Color for the "optional" tag that can appear in the label when the
  // `showOptional` option is set
  --optional-fg:                  hsl(var(--optional-hue), 10%, 30%);
  // Background color for the "optional" tag.
  --optional-bg:                  hsl(var(--optional-hue), 50%, 90%);
  // Border color for the "optional" tag.
  --optional-bd:                  hsl(var(--optional-hue), 70%, 80%);

  /* Inputs */
  // Text color for inputs in the default state.
  --input-fg:                     hsl(var(--input-hue), 20%, 40%);
  // Background color for inputs in the default state.
  --input-bg:                     hsl(var(--input-hue), 10%, 97%);
  // Border color for inputs in the default state.
  --input-bd:                     hsl(var(--input-hue), 30%, 80%);
  // Background color for input prefix/suffix elements in the default state.
  --input-prefix-bg:              hsl(var(--input-hue), 20%, 90%);
  // Text color for input prefix/suffix elements in the default state.
  --input-prefix-fg:              hsl(var(--input-hue), 70%, 20%);
  // Color for input placeholder text in the default state.
  --input-placeholder-fg:         hsl(var(--input-hue), 20%, 75%);

  /* Focussed Input State */
  // Color for labels in focussed fields.
  --focus-label-fg:               hsl(var(--focus-hue), 10%, 30%);
  // Text color for inputs in focussed fields.
  --focus-fg:                     hsl(var(--focus-hue), 60%, 20%);
  // Background color for inputs in focussed fields.
  --focus-bg:                     hsl(var(--focus-hue), 60%, 99%);
  // Border color for inputs in focussed fields.
  --focus-bd:                     hsl(var(--focus-hue), 60%, 70%);
  --focus-ring-opacity:           0.5;
  // Border color for inputs in focussed fields.
  --focus-ring-bd:                hsla(var(--focus-hue), 70%, 60%, var(--focus-ring-opacity));
  // Color of gap between border and ring.
  --focus-gap-bd:                 hsl(var(--focus-hue), 10%, 95%);
  // Text color for prefix/suffix elements in focussed fields.
  --focus-prefix-fg:              hsl(var(--focus-hue), 70%, 20%);
  // Background color for prefix/suffix elements in focussed fields.
  --focus-prefix-bg:              hsl(var(--focus-hue), 30%, 90%);
  // Color for input placeholder text in focussed fields.
  --focus-placeholder-fg:         hsl(var(--focus-hue), 50%, 80%);
  // Box shadow for focus ring
  --focus-ring:
    0 0 0 var(--focus-ring-gap)   var(--focus-gap-bd),
    0 0 0 var(--focus-ring-width) var(--focus-ring-bd);

  /* Valid Field State */
  // Color for labels in valid fields.
  --valid-label-fg:               hsl(var(--valid-hue), 50%, 30%);
  // Text color for inputs in valid fields.
  --valid-fg:                     hsl(var(--valid-hue), 30%, 30%);
  // Background color for inputs in valid fields.
  --valid-bg:                     hsl(var(--valid-hue), 30%, 97%);
  // Border color for inputs in valid fields.
  --valid-bd:                     hsl(var(--valid-hue), 20%, 50%);
  // Border color for valid inputs in focussed fields.
  --valid-ring-bd:                hsl(var(--valid-hue), 60%, 75%);
  // Color of gap between border and ring.
  --valid-gap-bd:                 hsl(var(--valid-hue), 10%, 95%);
  // Text color for prefix/suffix elements in valid fields.
  --valid-prefix-fg:              hsl(var(--valid-hue), 70%, 20%);
  // Background color for prefix/suffix elements in valid fields.
  --valid-prefix-bg:              hsl(var(--valid-hue), 30%, 90%);
  // Color for input placeholder text in valid fields.
  --valid-placeholder-fg:         hsl(var(--valid-hue), 40%, 70%);
  // Successful validation message displayed under field input
  --valid-message-fg:             hsl(var(--valid-hue), 60%, 40%);
  // Box shadow for valid focus ring
  --valid-ring:
    0 0 0 var(--focus-ring-gap)   var(--valid-gap-bd),
    0 0 0 var(--focus-ring-width) var(--valid-ring-bd);

  /* Invalid Field State */
  // Color for labels in invalid fields.
  --invalid-label-fg:             hsl(var(--invalid-hue), 50%, 30%);
  // Text color for inputs in invalid fields.
  --invalid-fg:                   hsl(var(--invalid-hue), 50%, 30%);
  // Background color for inputs in invalid fields.
  --invalid-bg:                   hsl(var(--invalid-hue), 60%, 96%);
  // Border color for inputs in invalid fields.
  --invalid-bd:                   hsl(var(--invalid-hue), 60%, 70%);
  // Border color for invalid inputs in focussed fields.
  --invalid-ring-bd:              hsl(var(--invalid-hue), 70%, 85%);
  // Color of gap between border and ring.
  --invalid-gap-bd:               hsl(var(--invalid-hue), 10%, 95%);
  // Text color for prefix/suffix elements in invalid fields.
  --invalid-prefix-fg:            hsl(var(--invalid-hue), 70%, 20%);
  // Background color for prefix/suffix elements in invalid fields.
  --invalid-prefix-bg:            hsl(var(--invalid-hue), 30%, 90%);
  // Color for input placeholder text in invalid fields.
  --invalid-placeholder-fg:       hsl(var(--invalid-hue), 50%, 80%);
  // Error message displayed under field input
  --invalid-message-fg:           hsl(var(--invalid-hue), 70%, 50%);
  // Box shadow for invalid focus ring
  --invalid-ring:
    0 0 0 var(--focus-ring-gap)   var(--invalid-gap-bd),
    0 0 0 var(--focus-ring-width) var(--invalid-ring-bd);

  /* Disabled Field State */
  // Saturation for disabled elements
  --disabled-sat:                 1%;
  // Color for labels in invalid fields.
  --disabled-label-fg:            hsl(var(--disabled-hue), var(--disabled-sat), 70%);
  // Text color for inputs in disabled fields.
  --disabled-fg:                  hsl(var(--disabled-hue), var(--disabled-sat), 50%);
  // Background color for inputs in disabled fields.
  --disabled-bg:                  hsl(var(--disabled-hue), var(--disabled-sat), 95%);
  // Border color for inputs in disabled fields.
  --disabled-bd:                  hsl(var(--disabled-hue), var(--disabled-sat), 75%);
  // Background color for prefix/suffix elements in disabled fields.
  --disabled-prefix-bg:           hsl(var(--disabled-hue), var(--disabled-sat), 90%);
  // Text color for prefix/suffix elements in disabled fields.
  --disabled-prefix-fg:           hsl(var(--disabled-hue), var(--disabled-sat), 50%);
  // Color for input placeholder text in disabled fields.
  --disabled-placeholder-fg:      hsl(var(--disabled-hue), var(--disabled-sat), 65%);
  // Error message displayed under field input
  --disabled-message-fg:          hsl(var(--disabled-hue), var(--disabled-sat), 70%);

  /* Errors panel */
  // Text color for errors
  --error-fg:                     hsl(var(--error-hue), 50%, 50%);
  // Background color for errors.
  --error-bg:                     hsl(var(--error-hue), 50%, 95%);
  // Color for errors border
  --error-bd:                     hsl(var(--error-hue), 80%, 40%);
  // Color for errors title
  --error-title-fg:               hsl(var(--error-hue), 20%, 90%);
  // Color for labels in errors
  --error-label-fg:               hsl(var(--error-hue), 60%, 40%);

  /* Fieldset */
  // Background color for fieldset
  --fieldset-bg:                rgba(255, 255, 255, 0.5);
  // Color of fieldset border
  --fieldset-bd:                  var(--input-bd);
  // Text color for fieldset legend
  --legend-fg:                    hsl(var(--brand-hue), 10%, 30%);
  // Background color for fieldset legend
  --legend-bg:                    hsl(var(--brand-hue), 5%, 95%);
  // Background color for fieldset legend
  --legend-bd:                    var(--fieldset-bd);

  // debug panel
  --debug-back-color:             hsl(var(--debug-hue), 20%, 95%);
  --debug-border-color:           hsl(var(--debug-hue), 30%, 85%);
  --debug-panel-back-color:       hsl(var(--debug-hue), 10%, 97%);
  --debug-panel-text-color:       hsl(var(--debug-hue), 90%, 10%);
  --debug-panel-title-color:      hsl(var(--debug-hue), 90%, 10%);
  --debug-panel-border-color:     var(--debug-border-color);
  --debug-border-radius:          #{$debug-border-radius};
  --debug-panel-border-radius:    #{$debug-panel-border-radius};
  --debug-panel-margin:           #{$debug-panel-margin};
  --debug-panel-padding:          #{$debug-panel-padding};
  --debug-box-shadow:             var(--shadow-2);
  --debug-panel-box-shadow:       var(--shadow-1);
}

#{$dark-selector} #{$formula-selector} {
  color-scheme: dark;
  --label-fg:                     hsl(var(--label-hue), 10%, 60%);
  --required-fg:                  hsl(var(--required-hue), 90%, 80%);
  --required-bg:                  hsl(var(--required-hue), 60%, 30%);
  --required-bd:                  hsl(var(--required-hue), 30%, 35%);
  --optional-fg:                  hsl(var(--optional-hue), 90%, 80%);
  --optional-bg:                  hsl(var(--optional-hue), 35%, 35%);
  --optional-bd:                  hsl(var(--optional-hue), 40%, 40%);

  --input-fg:                     hsl(var(--input-hue), 10%, 60%);
  --input-bg:                     hsl(var(--input-hue), 10%, 20%);
  --input-bd:                     hsl(var(--input-hue), 20%, 35%);
  --input-prefix-fg:              hsl(var(--input-hue), 20%, 50%);
  --input-prefix-bg:              hsl(var(--input-hue), 20%, 25%);
  --input-placeholder-fg:         hsl(var(--input-hue), 10%, 35%);

  --focus-label-fg:               hsl(var(--focus-hue), 40%, 70%);
  --focus-fg:                     hsl(var(--focus-hue), 10%, 80%);
  --focus-bg:                     hsl(var(--focus-hue), 15%, 15%);
  --focus-bd:                     hsl(var(--focus-hue), 30%, 45%);
  --focus-ring-bd:                hsl(var(--focus-hue), 40%, 50%, var(--focus-ring-opacity));
  --focus-gap-bd:                 hsl(var(--focus-hue), 10%, 5%);
  --focus-prefix-fg:              hsl(var(--focus-hue), 20%, 60%);
  --focus-prefix-bg:              hsl(var(--focus-hue), 25%, 30%);
  --focus-placeholder-fg:         hsl(var(--focus-hue), 15%, 50%);
  --focus-ring:
    0 0 0 var(--focus-ring-gap)   var(--focus-gap-bd),
    0 0 0 var(--focus-ring-width) var(--focus-ring-bd);

  --valid-label-fg:               hsl(var(--valid-hue), 10%, 50%);
  --valid-fg:                     hsl(var(--valid-hue), 5%, 65%);
  --valid-bg:                     hsl(var(--valid-hue), 10%, 15%);
  --valid-bd:                     hsl(var(--valid-hue), 15%, 40%);
  --valid-ring-bd:                hsl(var(--valid-hue), 40%, 50%);
  --valid-gap-bd:                 hsl(var(--valid-hue), 10%, 5%);
  --valid-prefix-fg:              hsl(var(--valid-hue), 10%, 50%);
  --valid-prefix-bg:              hsl(var(--valid-hue), 20%, 20%);
  --valid-placeholder-fg:         hsl(var(--valid-hue), 10%, 35%);
  --valid-message-fg:             hsl(var(--valid-hue), 60%, 40%);
  --valid-ring:
    0 0 0 var(--focus-ring-gap)   var(--valid-gap-bd),
    0 0 0 var(--focus-ring-width) var(--valid-ring-bd);

  --invalid-label-fg:             hsl(var(--invalid-hue), 15%, 55%);
  --invalid-fg:                   hsl(var(--invalid-hue), 5%, 65%);
  --invalid-bg:                   hsl(var(--invalid-hue), 10%, 15%);
  --invalid-bd:                   hsl(var(--invalid-hue), 30%, 45%);
  --invalid-ring-bd:              hsl(var(--invalid-hue), 60%, 50%);
  --invalid-gap-bd:               hsl(var(--invalid-hue), 10%, 5%);
  --invalid-prefix-fg:            hsl(var(--invalid-hue), 10%, 50%);
  --invalid-prefix-bg:            hsl(var(--invalid-hue), 20%, 20%);
  --invalid-placeholder-fg:       hsl(var(--invalid-hue), 10%, 40%);
  --invalid-message-fg:           hsl(var(--invalid-hue), 70%, 60%);
  --invalid-ring:
    0 0 0 var(--focus-ring-gap)   var(--invalid-gap-bd),
    0 0 0 var(--focus-ring-width) var(--invalid-ring-bd);

  --disabled-label-fg:            hsl(var(--disabled-hue), var(--disabled-sat), 45%);
  --disabled-fg:                  hsl(var(--disabled-hue), var(--disabled-sat), 40%);
  --disabled-bg:                  hsl(var(--disabled-hue), var(--disabled-sat), 25%);
  --disabled-bd:                  hsl(var(--disabled-hue), var(--disabled-sat), 40%);
  --disabled-prefix-fg:           hsl(var(--disabled-hue), var(--disabled-sat), 60%);
  --disabled-prefix-bg:           hsl(var(--disabled-hue), var(--disabled-sat), 30%);
  --disabled-placeholder-fg:      hsl(var(--disabled-hue), var(--disabled-sat), 45%);
  --disabled-message-fg:          hsl(var(--disabled-hue), var(--disabled-sat), 50%);

  --error-fg:                     hsl(var(--error-hue), 20%, 70%);
  --error-bg:                     hsl(var(--error-hue), 30%, 15%);
  --error-bd:                     hsl(var(--error-hue), 60%, 35%);
  --error-title-fg:               hsl(var(--error-hue), 20%, 90%);
  --error-label-fg:               hsl(var(--error-hue), 80%, 70%);

  --fieldset-bg:                rgba(255, 255, 255, 0.05);
  --fieldset-bd:                  var(--input-bd);
  --legend-fg:                    hsl(var(--brand-hue), 10%, 70%);
  --legend-bg:                  rgba(255, 255, 255, 0.15);
  --legend-bd:                    var(--fieldset-bd);

  --debug-back-color:             hsl(var(--debug-hue), 2%, 15%);
  --debug-border-color:           hsl(var(--debug-hue), 10%, 35%);
  --debug-panel-back-color:       hsl(var(--debug-hue), 5%, 20%);
  --debug-panel-text-color:       hsl(var(--debug-hue), 60%, 90%);
  --debug-panel-title-color:      hsl(var(--debug-hue), 90%, 95%);
}